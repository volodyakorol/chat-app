type TIcon = {
  viewBox: string;
  fillRule?: 'evenodd' | 'nonzero' | 'inherit';
  clipRule?: string | number;
  d?: string;
};

const IconsTemplate = {
  Home: {
    viewBox: '0 0 40 40',
    d: 'M42.3672 20.6719L23.0594 1.37814C22.9204 1.23884 22.7553 1.12833 22.5735 1.05293C22.3917 0.977532 22.1968 0.938721 22 0.938721C21.8032 0.938721 21.6084 0.977532 21.4266 1.05293C21.2448 1.12833 21.0797 1.23884 20.9406 1.37814L1.63284 20.6719C1.07034 21.2344 0.751587 21.9984 0.751587 22.7953C0.751587 24.45 2.0969 25.7953 3.75159 25.7953H5.78596V39.5625C5.78596 40.3922 6.45627 41.0625 7.28596 41.0625H19V30.5625H24.25V41.0625H36.7141C37.5438 41.0625 38.2141 40.3922 38.2141 39.5625V25.7953H40.2485C41.0453 25.7953 41.8094 25.4813 42.3719 24.9141C43.5391 23.7422 43.5391 21.8438 42.3672 20.6719V20.6719Z',
  },
  QuestionMark: {
    viewBox: '0 0 40 40',
    fillRule: 'evenodd',
    clipRule: 'evenodd',
    d: 'M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40ZM18.968 25.416C19.16 25.6293 19.416 25.736 19.736 25.736C20.056 25.736 20.312 25.6507 20.504 25.48C20.696 25.3093 20.8027 25.0853 20.824 24.808C20.888 24.2533 21.0053 23.7307 21.176 23.24C21.368 22.728 21.6667 22.2053 22.072 21.672C22.4773 21.1173 23.0107 20.5093 23.672 19.848C24.4187 19.1227 24.9947 18.4613 25.4 17.864C25.8267 17.2453 26.136 16.6373 26.328 16.04C26.52 15.4427 26.616 14.8133 26.616 14.152C26.616 13.1067 26.3493 12.2 25.816 11.432C25.2827 10.664 24.536 10.0667 23.576 9.64C22.616 9.21333 21.496 9 20.216 9C19.128 9 18.0187 9.17067 16.888 9.512C15.7573 9.85333 14.7653 10.3333 13.912 10.952C13.5493 11.208 13.2933 11.496 13.144 11.816C13.016 12.1147 12.9733 12.4133 13.016 12.712C13.08 12.9893 13.208 13.224 13.4 13.416C13.6133 13.5867 13.8693 13.6827 14.168 13.704C14.488 13.7253 14.8507 13.608 15.256 13.352C15.9813 12.8613 16.728 12.488 17.496 12.232C18.264 11.9547 19.1067 11.816 20.024 11.816C21.0693 11.816 21.88 12.0507 22.456 12.52C23.032 12.9893 23.32 13.6293 23.32 14.44C23.32 14.888 23.256 15.3253 23.128 15.752C23 16.1573 22.7867 16.584 22.488 17.032C22.2107 17.48 21.816 17.992 21.304 18.568C20.664 19.2933 20.152 19.976 19.768 20.616C19.384 21.256 19.1067 21.896 18.936 22.536C18.7653 23.1547 18.68 23.816 18.68 24.52C18.68 24.8827 18.776 25.1813 18.968 25.416ZM18.2 31.4C18.584 31.784 19.0853 31.976 19.704 31.976C20.344 31.976 20.8347 31.784 21.176 31.4C21.5387 31.016 21.72 30.5253 21.72 29.928C21.72 29.3307 21.5387 28.8507 21.176 28.488C20.8347 28.104 20.344 27.912 19.704 27.912C19.0853 27.912 18.584 28.104 18.2 28.488C17.816 28.8507 17.624 29.3307 17.624 29.928C17.624 30.5253 17.816 31.016 18.2 31.4Z',
  },
};

type TIconsProps = {
  type: keyof typeof IconsTemplate;
  color?: string;
  className?: string;
};

export const Icons = ({ color = 'red', type = 'QuestionMark', className = '' }: TIconsProps) => {
  const { viewBox, d, fillRule, clipRule } = IconsTemplate[type] as TIcon;

  return (
    <>
      <svg viewBox={viewBox} fill={color} className={className} xmlns='http://www.w3.org/2000/svg'>
        <path fillRule={fillRule} clipRule={clipRule} d={d} />
      </svg>
    </>
  );
};
